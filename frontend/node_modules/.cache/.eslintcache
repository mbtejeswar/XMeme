[{"/home/tejeswar/VS_Workspace/XMeme/frontend/src/index.js":"1","/home/tejeswar/VS_Workspace/XMeme/frontend/src/App.js":"2","/home/tejeswar/VS_Workspace/XMeme/frontend/src/reportWebVitals.js":"3","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeForm/memeForm.jsx":"4","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeList/memeList.jsx":"5","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeCard/memeCard.jsx":"6","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx":"7","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/common/navbar/navbar.jsx":"8"},{"size":500,"mtime":1612507170002,"results":"9","hashOfConfig":"10"},{"size":303,"mtime":1612681650810,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612507170002,"results":"12","hashOfConfig":"10"},{"size":2077,"mtime":1612846239954,"results":"13","hashOfConfig":"10"},{"size":465,"mtime":1612841992570,"results":"14","hashOfConfig":"10"},{"size":944,"mtime":1612770627430,"results":"15","hashOfConfig":"10"},{"size":2353,"mtime":1612842157383,"results":"16","hashOfConfig":"10"},{"size":545,"mtime":1612772119374,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"d07ls0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/home/tejeswar/VS_Workspace/XMeme/frontend/src/index.js",[],["40","41"],"/home/tejeswar/VS_Workspace/XMeme/frontend/src/App.js",["42","43"],"import MemeForm from './components/memeForm/memeForm';\nimport 'semantic-ui-css/semantic.min.css'\nimport MemeList from './components/memeList/memeList';\nimport Main from './components/main/main';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","/home/tejeswar/VS_Workspace/XMeme/frontend/src/reportWebVitals.js",[],"/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeForm/memeForm.jsx",["44","45"],"import { Button, Form , Message} from \"semantic-ui-react\";\nimport { React, useState } from \"react\";\nimport classes from './styles.module.css';\n\n// const submitMeme = () => {};\n\nconst MemeForm = (props) => {\n  const [memeOwner, setMemeOwner] = useState(\"\");\n  const [caption, setMemeCaption] = useState(\"\");\n  const [memeUrl, setmemeUrl] = useState(\"\");\n\n  const setValue = (event) => {\n    switch (event.target.name) {\n      case \"owner\":\n        setMemeOwner(event.target.value);\n        break;\n      case \"caption\":\n        setMemeCaption(event.target.value);\n        break;\n      case \"url\":\n        setmemeUrl(event.target.value);\n        break;\n    }\n  };\n\n  const checkValidation = (error, response)=>{\n    if(!error){\n      return true\n    }\n  }\n\n  const clearValues = ()=>{\n    setMemeOwner('')\n    setMemeCaption('')\n    setmemeUrl('')\n  }\n  const submitMeme = () => {\n    let postData = {name:memeOwner, url:memeUrl,caption:caption}\n    props.submitMeme(postData);\n    clearValues();\n  };\n  return (\n    <Form className={classes['form']}>\n  \n      <Form.Field>\n        <label>Meme Owner</label>\n        <input\n          value={memeOwner}\n          name=\"owner\"\n          onChange={setValue}\n          placeholder=\"Enter your full name\"\n        />\n        \n      </Form.Field>\n      <Form.Field>\n        <label>Caption</label>\n        <input\n          value={caption}\n          name=\"caption\"\n          onChange={setValue}\n          placeholder=\"Be Creative with caption\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Meme URL</label>\n        <input\n          value={memeUrl}\n          name=\"url\"\n          onChange={setValue}\n          placeholder=\"Enter URL of your meme here\"\n        />\n      </Form.Field>\n      <Message\n      warning\n      header='Could you check something!'\n      list={[\n        'That e-mail has been subscribed, but you have not yet clicked the verification link in your e-mail.',\n      ]}\n    />\n      <Button onClick={submitMeme} type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default MemeForm;\n","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeList/memeList.jsx",["46","47"],"import React, { useEffect, useState } from 'react';\nimport {Grid} from 'semantic-ui-react';\nimport MemeCard from '../memeCard/memeCard';\n\n\n\nconst MemeList = (props)=>{\n\n    const {firstHundredMemes} = props;\n\n\n\n    return(\n       \n        <Grid>\n       { firstHundredMemes.length > 0 ? firstHundredMemes.map((meme)=>(\n       <MemeCard image={meme.url} name={meme.owner} caption={meme.caption} />\n       )) :''}\n        </Grid>\n\n    )\n\n}\n\nexport default MemeList;\n\n\n","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeCard/memeCard.jsx",[],"/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx",["48","49","50"],"import React from 'react';\nimport MemeCard from '../memeCard/memeCard';\nimport MemeList from '../memeList/memeList';\nimport MemeForm from '../memeForm/memeForm';\nimport {Container}  from 'semantic-ui-react';\nimport classes from './styles.module.css';\nimport Navbar from '../common/navbar/navbar';\n\n\nclass Main extends React.Component{\n\n    state={\n       loading:false,\n       firstHundredMemes:null\n    }\n\n    checkValidation = (error, response)=>{\n        if(!error){\n          return true\n        }\n      }\n    componentDidMount(){\n        this.fetchFirstHundredMemes();\n\n     \n\n    }\n\n     fetchFirstHundredMemes = ()=>{\n        fetch(encodeURI(`http://localhost:8080/memes`))\n        .then((res)=>{\n          return res.json()\n        })\n        .then((response)=>{\n            this.setState({firstHundredMemes:response});\n        })\n        .catch((err)=>{\n            console.log(`Error occured during fetch ${err}`);\n        })\n\n    }\n\n    // componentDidUpdate(){\n    //     this.fetchFirstHundredMemes();\n    // }\n    submitMeme = async (postData)=>{\n     \n        this.setState({loading:true});\n\n        const memes = await fetch(encodeURI(`http://localhost:8080/memes`),{method:'post', headers:{'Content-Type': 'application/json'} ,body:JSON.stringify(postData)})\n        .then((res)=>{\n            return res.json();\n        })\n        .then((resJSON)=>{\n            \n           let valResult =  this.checkValidation(false,resJSON)\n           if(valResult){\n            // clearValues()\n          \n            return resJSON\n           }\n          \n        })\n        .catch((err)=>{\n            this.setState({loading:false});\n          console.log(`Error occured during fetch api`)\n        })\n        this.fetchFirstHundredMemes();\n    }\n\n\n  \n        render(){\n\n            return(\n                <div className={classes['mainContainer']}>\n                    <Navbar items={['Login', 'Register']} />\n                    <div className={classes.container}>\n                    <MemeForm submitMeme = {this.submitMeme} />\n                    <div className={classes.memeListContainer}>\n                    {this.state.firstHundredMemes ?  <MemeList firstHundredMemes={this.state.firstHundredMemes}/> :''}\n                    </div>\n                   </div>\n                </div>\n            )\n\n        }\n    \n\n}\n\nexport default Main;\n\n\n","/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/common/navbar/navbar.jsx",["51","52","53","54","55"],"import React from 'react';\nimport {\n    Container,\n    Icon,\n    Image,\n    Menu,\n    Sidebar,\n    Responsive\n  } from \"semantic-ui-react\";\n\n\nconst navbar = (props)=>{\n\n    return(\n\n        <Menu fixed=\"top\" inverted>\n        <Menu.Item>\n          XMeme\n        </Menu.Item>\n        <Menu.Item onClick={props.onToggle}>\n         \n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          {/* {props.items.map(props.rightItems, item => <Menu.Item {...item} />)} */}\n        </Menu.Menu>\n      </Menu>\n\n    )\n\n\n\n}\n\nexport default navbar;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":13,"column":5,"nodeType":"67","messageId":"68","endLine":23,"endColumn":6},{"ruleId":"60","severity":1,"message":"69","line":26,"column":9,"nodeType":"62","messageId":"63","endLine":26,"endColumn":24},{"ruleId":"60","severity":1,"message":"70","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"71","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"72","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"73","line":5,"column":9,"nodeType":"62","messageId":"63","endLine":5,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":50,"column":15,"nodeType":"62","messageId":"63","endLine":50,"endColumn":20},{"ruleId":"60","severity":1,"message":"73","line":3,"column":5,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"75","line":4,"column":5,"nodeType":"62","messageId":"63","endLine":4,"endColumn":9},{"ruleId":"60","severity":1,"message":"76","line":5,"column":5,"nodeType":"62","messageId":"63","endLine":5,"endColumn":10},{"ruleId":"60","severity":1,"message":"77","line":7,"column":5,"nodeType":"62","messageId":"63","endLine":7,"endColumn":12},{"ruleId":"60","severity":1,"message":"78","line":8,"column":5,"nodeType":"62","messageId":"63","endLine":8,"endColumn":15},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'MemeForm' is defined but never used.","Identifier","unusedVar","'MemeList' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'checkValidation' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'MemeCard' is defined but never used.","'Container' is defined but never used.","'memes' is assigned a value but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","'Sidebar' is defined but never used.","'Responsive' is defined but never used.","no-global-assign","no-unsafe-negation"]