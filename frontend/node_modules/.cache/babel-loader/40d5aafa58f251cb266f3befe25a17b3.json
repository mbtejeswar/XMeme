{"ast":null,"code":"var _jsxFileName = \"/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx\";\nimport React from 'react';\nimport MemeCard from '../memeCard/memeCard';\nimport MemeList from '../memeList/memeList';\nimport MemeForm from '../memeForm/memeForm';\nimport { Container } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      firstHundredMemes: null\n    };\n\n    this.checkValidation = (error, response) => {\n      if (!error) {\n        return true;\n      }\n    };\n\n    this.submitMeme = postData => {\n      this.setState({\n        loading: true\n      });\n      debugger;\n      const memes = fetch(encodeURI(`http://localhost:8080/memes`), {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      }).then(res => {\n        return res.json();\n      }).then(resJSON => {\n        this.setState({\n          loading: false\n        });\n        let valResult = this.checkValidation(false, resJSON);\n\n        if (valResult) {\n          // clearValues()\n          return resJSON;\n        }\n      }).catch(err => {\n        this.setState({\n          loading: false\n        });\n        console.log(`Error occured during fetch api`);\n      });\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n\n    const fetchFirstHundred = () => {\n      fetch(encodeURI(`http://localhost:8080/memes`)).then(res => {\n        return res.json();\n      }).then(response => {\n        this.setState({\n          firstHundredMemes: response\n        });\n      }).catch(err => {\n        console.log(`Error occured during fetch ${err}`);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MemeForm, {\n        submitMeme: this.submitMeme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), this.state.firstHundredMemes ? /*#__PURE__*/_jsxDEV(MemeList, {\n        firstHundredMemes: this.state.firstHundredMemes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 54\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx"],"names":["React","MemeCard","MemeList","MemeForm","Container","Main","Component","state","loading","firstHundredMemes","checkValidation","error","response","submitMeme","postData","setState","memes","fetch","encodeURI","method","headers","body","JSON","stringify","then","res","json","resJSON","valResult","catch","err","console","log","componentDidMount","fetchFirstHundred","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,SAAR,QAAyB,mBAAzB;;;AAGA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAExB;AACHC,MAAAA,OAAO,EAAC,KADL;AAEHC,MAAAA,iBAAiB,EAAC;AAFf,KAFwB;;AAAA,SAO9BC,eAP8B,GAOZ,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACjC,UAAG,CAACD,KAAJ,EAAU;AACR,eAAO,IAAP;AACD;AACF,KAX2B;;AAAA,SA4B9BE,UA5B8B,GA4BhBC,QAAD,IAAY;AACrB,WAAKC,QAAL,CAAc;AAACP,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA;AACA,YAAMQ,KAAK,GAAGC,KAAK,CAACC,SAAS,CAAE,6BAAF,CAAV,EAA0C;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,OAAO,EAAC;AAAC,0BAAgB;AAAjB,SAAxB;AAA8DC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeT,QAAf;AAAnE,OAA1C,CAAL,CACbU,IADa,CACPC,GAAD,IAAO;AACT,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAHa,EAIbF,IAJa,CAIPG,OAAD,IAAW;AACb,aAAKZ,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAC;AAAT,SAAd;AACD,YAAIoB,SAAS,GAAI,KAAKlB,eAAL,CAAqB,KAArB,EAA2BiB,OAA3B,CAAjB;;AACA,YAAGC,SAAH,EAAa;AACZ;AACA,iBAAOD,OAAP;AACA;AAEH,OAZa,EAabE,KAba,CAaNC,GAAD,IAAO;AACV,aAAKf,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAC;AAAT,SAAd;AACFuB,QAAAA,OAAO,CAACC,GAAR,CAAa,gCAAb;AACD,OAhBa,CAAd;AAiBH,KAhD6B;AAAA;;AAY9BC,EAAAA,iBAAiB,GAAE;AACf;;AACD,UAAOC,iBAAiB,GAAG,MAAI;AAC1BjB,MAAAA,KAAK,CAACC,SAAS,CAAE,6BAAF,CAAV,CAAL,CACCM,IADD,CACOC,GAAD,IAAO;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAHD,EAICF,IAJD,CAIOZ,QAAD,IAAY;AACd,aAAKG,QAAL,CAAc;AAACN,UAAAA,iBAAiB,EAACG;AAAnB,SAAd;AACH,OAND,EAOCiB,KAPD,CAOQC,GAAD,IAAO;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,GAAI,EAA9C;AACH,OATD;AAUH,KAXF;AAaF;;AAyBGK,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,UAAU,EAAI,KAAKtB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKN,KAAL,CAAWE,iBAAX,gBAAgC,QAAC,QAAD;AAAU,QAAA,iBAAiB,EAAE,KAAKF,KAAL,CAAWE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA8F,EAFnG;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA9DyB;;AAmElC,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport MemeCard from '../memeCard/memeCard';\nimport MemeList from '../memeList/memeList';\nimport MemeForm from '../memeForm/memeForm';\nimport {Container}  from 'semantic-ui-react';\n\n\nclass Main extends React.Component{\n\n    state={\n       loading:false,\n       firstHundredMemes:null\n    }\n\n    checkValidation = (error, response)=>{\n        if(!error){\n          return true\n        }\n      }\n    componentDidMount(){\n        debugger;\n       const  fetchFirstHundred = ()=>{\n            fetch(encodeURI(`http://localhost:8080/memes`))\n            .then((res)=>{\n              return res.json()\n            })\n            .then((response)=>{\n                this.setState({firstHundredMemes:response});\n            })\n            .catch((err)=>{\n                console.log(`Error occured during fetch ${err}`);\n            })\n        }\n\n    }\n    submitMeme = (postData)=>{\n        this.setState({loading:true});\n        debugger;\n        const memes = fetch(encodeURI(`http://localhost:8080/memes`),{method:'post', headers:{'Content-Type': 'application/json'} ,body:JSON.stringify(postData)})\n        .then((res)=>{\n            return res.json();\n        })\n        .then((resJSON)=>{\n            this.setState({loading:false});\n           let valResult =  this.checkValidation(false,resJSON)\n           if(valResult){\n            // clearValues()\n            return resJSON\n           }\n          \n        })\n        .catch((err)=>{\n            this.setState({loading:false});\n          console.log(`Error occured during fetch api`)\n        })\n    }\n\n\n  \n        render(){\n\n            return(\n                <div>\n                    <MemeForm submitMeme = {this.submitMeme} />\n                    {this.state.firstHundredMemes ?  <MemeList firstHundredMemes={this.state.firstHundredMemes}/> :''}\n                   \n                </div>\n            )\n\n        }\n    \n\n}\n\nexport default Main;\n\n\n"]},"metadata":{},"sourceType":"module"}