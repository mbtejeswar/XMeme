{"ast":null,"code":"var _jsxFileName = \"/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeForm/memeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Message } from \"semantic-ui-react\";\nimport { React, useState } from \"react\";\nimport classes from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemeForm = props => {\n  _s();\n\n  /**\n   * @property {string} memeOwner\n   * stores the value of memeOwner on change in input box\n   * @property {string} caption\n   * caption is stored in caption variable onchange\n   * @property {string} memeUrl \n   */\n  const [memeOwner, setMemeOwner] = useState(\"\");\n  const [caption, setMemeCaption] = useState(\"\");\n  const [memeUrl, setmemeUrl] = useState(\"\");\n\n  const setValue = event => {\n    switch (event.target.name) {\n      case \"owner\":\n        setMemeOwner(event.target.value);\n        break;\n\n      case \"caption\":\n        setMemeCaption(event.target.value);\n        break;\n\n      case \"url\":\n        setmemeUrl(event.target.value);\n        break;\n    }\n  };\n  /**\n   * \n   * @param {boolean} error \n   * boolean value to store the error flag of API call \n   * @param {object} response \n   * Input response to check validation\n   */\n\n\n  const checkValidation = (error, response) => {\n    if (!error) {\n      return true;\n    }\n  };\n  /**\n   * Clear all the input values on submit\n   */\n\n\n  const clearValues = () => {\n    setMemeOwner('');\n    setMemeCaption('');\n    setmemeUrl('');\n  };\n  /**\n   * Submit the meme on Submit button to backend\n   */\n\n\n  const submitMeme = () => {\n    let postData = {\n      name: memeOwner,\n      url: memeUrl,\n      caption: caption\n    };\n    props.submitMeme(postData);\n    clearValues();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: classes['form'],\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meme Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: memeOwner,\n        name: \"owner\",\n        onChange: setValue,\n        placeholder: \"Enter your full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: caption,\n        name: \"caption\",\n        onChange: setValue,\n        placeholder: \"Be Creative with caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meme URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: memeUrl,\n        name: \"url\",\n        onChange: setValue,\n        placeholder: \"Enter URL of your meme here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      warning: true,\n      header: \"Could you check something!\",\n      list: ['That e-mail has been subscribed, but you have not yet clicked the verification link in your e-mail.']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: submitMeme,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemeForm, \"xPzJDLBFpDU1EjUkIxjVKGJ4tWw=\");\n\n_c = MemeForm;\nexport default MemeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeForm\");","map":{"version":3,"sources":["/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/memeForm/memeForm.jsx"],"names":["Button","Form","Message","React","useState","classes","MemeForm","props","memeOwner","setMemeOwner","caption","setMemeCaption","memeUrl","setmemeUrl","setValue","event","target","name","value","checkValidation","error","response","clearValues","submitMeme","postData","url"],"mappings":"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","sourcesContent":["import { Button, Form , Message} from \"semantic-ui-react\";\nimport { React, useState } from \"react\";\nimport classes from './styles.module.css';\n\n\n\nconst MemeForm = (props) => {\n  /**\n   * @property {string} memeOwner\n   * stores the value of memeOwner on change in input box\n   * @property {string} caption\n   * caption is stored in caption variable onchange\n   * @property {string} memeUrl \n   */\n  const [memeOwner, setMemeOwner] = useState(\"\");\n  const [caption, setMemeCaption] = useState(\"\");\n  const [memeUrl, setmemeUrl] = useState(\"\");\n\n  const setValue = (event) => {\n    switch (event.target.name) {\n      case \"owner\":\n        setMemeOwner(event.target.value);\n        break;\n      case \"caption\":\n        setMemeCaption(event.target.value);\n        break;\n      case \"url\":\n        setmemeUrl(event.target.value);\n        break;\n    }\n  };\n\n  /**\n   * \n   * @param {boolean} error \n   * boolean value to store the error flag of API call \n   * @param {object} response \n   * Input response to check validation\n   */\n  const checkValidation = (error, response)=>{\n    if(!error){\n      return true\n    }\n  }\n\n  /**\n   * Clear all the input values on submit\n   */\n\n  const clearValues = ()=>{\n    setMemeOwner('')\n    setMemeCaption('')\n    setmemeUrl('')\n  }\n  /**\n   * Submit the meme on Submit button to backend\n   */\n  const submitMeme = () => {\n    let postData = {name:memeOwner, url:memeUrl,caption:caption}\n    props.submitMeme(postData);\n    clearValues();\n  };\n  return (\n    <Form className={classes['form']}>\n  \n      <Form.Field>\n        <label>Meme Owner</label>\n        <input\n          value={memeOwner}\n          name=\"owner\"\n          onChange={setValue}\n          placeholder=\"Enter your full name\"\n        />\n        \n      </Form.Field>\n      <Form.Field>\n        <label>Caption</label>\n        <input\n          value={caption}\n          name=\"caption\"\n          onChange={setValue}\n          placeholder=\"Be Creative with caption\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Meme URL</label>\n        <input\n          value={memeUrl}\n          name=\"url\"\n          onChange={setValue}\n          placeholder=\"Enter URL of your meme here\"\n        />\n      </Form.Field>\n      <Message\n      warning\n      header='Could you check something!'\n      list={[\n        'That e-mail has been subscribed, but you have not yet clicked the verification link in your e-mail.',\n      ]}\n    />\n      <Button onClick={submitMeme} type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default MemeForm;\n"]},"metadata":{},"sourceType":"module"}