{"ast":null,"code":"var _jsxFileName = \"/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx\";\nimport React from 'react';\nimport MemeCard from '../memeCard/memeCard';\nimport MemeList from '../memeList/memeList';\nimport MemeForm from '../memeForm/memeForm';\nimport { Container } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.submitMeme = () => {\n      let postData = {\n        owner: memeOwner,\n        url: memeUrl,\n        caption: caption\n      };\n      debugger;\n      console.log(postData);\n      setLoading(true);\n      const memes = fetch(encodeURI(`http://localhost:8080/memes`), {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      }).then(res => {\n        return res.json();\n      }).then(resJSON => {\n        setLoading(false);\n        console.log(resJSON);\n        let valResult = checkValidation(false, resJSON);\n\n        if (valResult) {\n          clearValues();\n          return resJSON;\n        }\n      }).catch(err => {\n        setLoading(false);\n        console.log(`Error occured during fetch api`);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MemeForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MemeList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/tejeswar/VS_Workspace/XMeme/frontend/src/components/main/main.jsx"],"names":["React","MemeCard","MemeList","MemeForm","Container","Main","Component","state","submitMeme","postData","owner","memeOwner","url","memeUrl","caption","console","log","setLoading","memes","fetch","encodeURI","method","headers","body","JSON","stringify","then","res","json","resJSON","valResult","checkValidation","clearValues","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,SAAR,QAAyB,mBAAzB;;;AAGA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAExB,EAFwB;;AAAA,SAO7BC,UAP6B,GAOhB,MAAM;AAChB,UAAIC,QAAQ,GAAG;AAACC,QAAAA,KAAK,EAACC,SAAP;AAAkBC,QAAAA,GAAG,EAACC,OAAtB;AAA8BC,QAAAA,OAAO,EAACA;AAAtC,OAAf;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAQ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMC,KAAK,GAAGC,KAAK,CAACC,SAAS,CAAE,6BAAF,CAAV,EAA0C;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,OAAO,EAAC;AAAC,0BAAgB;AAAjB,SAAxB;AAA8DC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAehB,QAAf;AAAnE,OAA1C,CAAL,CACbiB,IADa,CACPC,GAAD,IAAO;AACT,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAHa,EAIbF,IAJa,CAIPG,OAAD,IAAW;AACfZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACEF,QAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACD,YAAIC,SAAS,GAAIC,eAAe,CAAC,KAAD,EAAOF,OAAP,CAAhC;;AACA,YAAGC,SAAH,EAAa;AACZE,UAAAA,WAAW;AACX,iBAAOH,OAAP;AACA;AAEH,OAba,EAcbI,KAda,CAcNC,GAAD,IAAO;AACZjB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAa,gCAAb;AACD,OAjBa,CAAd;AAkBD,KA9B2B;AAAA;;AAgC1BmB,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAzCyB;;AA8ClC,eAAe9B,IAAf","sourcesContent":["import React from 'react';\nimport MemeCard from '../memeCard/memeCard';\nimport MemeList from '../memeList/memeList';\nimport MemeForm from '../memeForm/memeForm';\nimport {Container}  from 'semantic-ui-react';\n\n\nclass Main extends React.Component{\n\n    state={\n\n    }\n\n    \n     submitMeme = () => {\n        let postData = {owner:memeOwner, url:memeUrl,caption:caption}\n        debugger;\n        console.log(postData);\n        setLoading(true);\n        const memes = fetch(encodeURI(`http://localhost:8080/memes`),{method:'post', headers:{'Content-Type': 'application/json'} ,body:JSON.stringify(postData)})\n        .then((res)=>{\n            return res.json();\n        })\n        .then((resJSON)=>{\n          setLoading(false);\n            console.log(resJSON);\n           let valResult =  checkValidation(false,resJSON)\n           if(valResult){\n            clearValues()\n            return resJSON\n           }\n          \n        })\n        .catch((err)=>{\n          setLoading(false);\n          console.log(`Error occured during fetch api`)\n        })\n      };\n  \n        render(){\n\n            return(\n                <div>\n                    <MemeForm />\n                    <MemeList />\n                </div>\n            )\n\n        }\n    \n\n}\n\nexport default Main;\n\n\n"]},"metadata":{},"sourceType":"module"}